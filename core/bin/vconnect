#!/bin/bash

. $NETKIT_HOME/netkit.conf

export TMUX='' # allow nesting of tmux sessions

RETRY_COUNT=1
RETRY_INTERVAL=5

tmux_connect(){ # $1 = machine name
    tmux -L netkit attach -t "$1"
}

open_terminal(){ # $1 = machine name
    if [ -z ${TERM_TYPE+x} ]; then
        echo "No terminal set in netkit.conf."
        exit 1
    fi
    case "$TERM_TYPE" in
        alacritty)          TERMCMD="alacritty -e";;
        kitty)              TERMCMD="kitty";;
        konsole)            TERMCMD="konsole --nofork -e";;
        konsole-tab)        TERMCMD="$NETKIT_HOME/bin/konsole-tabs.sh -e";;
        *)                  TERMCMD="xterm -e";;
    esac
    nohup $TERMCMD tmux -L netkit attach -t "$1" &> /dev/null &
}

print_help(){
    echo "HELP"
}

# from https://medium.com/@Drew_Stokes/bash-argument-parsing-54f3b81a6a8f

while (( "$#" )); do
  case "$1" in
    -h|--help)
      print_help
      exit
      ;;
    -l|--list)
      tmux -L netkit list-sessions
      exit
      ;;
    -t|--terminal)
      OPEN_TERM="TRUE"
      shift
      ;;
    -r|--retry-count)
      if [ -n "$2" ] && [ ${2:0:1} != "-" ]; then
        RETRY_COUNT=$2
        shift 2
      else
        echo "Error: Argument for $1 is missing" >&2
        exit 1
      fi
      ;;
    -n|--interval)
      if [ -n "$2" ] && [ ${2:0:1} != "-" ]; then
        RETRY_INTERVAL=$2
        shift 2
      else
        echo "Error: Argument for $1 is missing" >&2
        exit 1
      fi
      ;;
    -m|--machine)
      if [ -n "$2" ] && [ ${2:0:1} != "-" ]; then
        MACHINE_NAME=$2
        shift 2
      else
        echo "Error: Argument for $1 is missing" >&2
        exit 1
      fi
      ;;
    *)
      echo "Error: Unsupported flag $1" >&2
      exit 1
      ;;
  esac
done

if [ -z ${MACHINE_NAME+x} ]; then
    echo "Machine name not given."
    print_help
    exit 1
fi


ATTEMPTS=1

while [ $ATTEMPTS -le $RETRY_COUNT ]; do
    tmux -L netkit has-session -t "$MACHINE_NAME" 2>/dev/null
    if [ $? != 0 ]; then
        ATMSG=""
        [ $RETRY_COUNT -gt 1 ] && ATMSG="(Attempt $ATTEMPTS)"
        echo "[vconnect]: tmux session does not exist for this machine. $ATMSG"
        if [ $ATTEMPTS -eq $RETRY_COUNT ]; then
            [ $RETRY_COUNT -gt 1 ] && echo "[vconnect]: too many attempts. exiting."
            exit
        fi
        sleep "$RETRY_INTERVAL"
    else
        ATTEMPTS=$RETRY_COUNT
    fi
    ATTEMPTS=$((ATTEMPTS+1))
done

if [ "$OPEN_TERM" = "TRUE" ]; then
    open_terminal $MACHINE_NAME
else
    tmux_connect $MACHINE_NAME
fi
